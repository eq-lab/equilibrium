
//! Autogenerated weights for `eq_rate`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-10-17, STEPS: `10`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ivan-GP76`, CPU: `11th Gen Intel(R) Core(TM) i7-11800H @ 2.30GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/eq-node
// benchmark
// pallet
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// eq_rate
// --extrinsic=*
// --steps
// 10
// --repeat
// 5
// --output
// ./runtime/equilibrium/src/weights/pallet_rate.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight}};
use sp_std::marker::PhantomData;

/// Weight functions for `eq_rate`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> eq_rate::WeightInfo for WeightInfo<T> {
	// Storage: EqRate Keys (r:1 w:0)
	// Storage: EqAggregates AccountUserGroups (r:6 w:1)
	// Storage: System Account (r:2 w:2)
	// Storage: EqDex AssetWeightByAccountId (r:1 w:0)
	// Storage: EqAssets Assets (r:1 w:0)
	// Storage: Oracle PricePoints (r:17 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: EqRate NowMillisOffset (r:1 w:0)
	// Storage: EqMarginCall MaintenanceTimers (r:1 w:0)
	// Storage: EqRate LastFeeUpdate (r:1 w:1)
	// Storage: FinancialModule Metrics (r:1 w:0)
	// Storage: EqAggregates TotalUserGroups (r:37 w:3)
	// Storage: EqRate AutoReinitEnabled (r:1 w:0)
	// Storage: Authorship Author (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: Subaccounts OwnerAccount (r:1 w:0)
	// Storage: EqBalances Account (r:1 w:0)
	fn reinit() -> Weight {
		Weight::from_parts(3_683_760_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(75 as u64))
			.saturating_add(T::DbWeight::get().writes(7 as u64))
	}
	// Storage: EqRate LastFeeUpdate (r:1 w:1)
	// Storage: EqAggregates AccountUserGroups (r:6 w:1)
	// Storage: System Account (r:2 w:2)
	// Storage: EqDex AssetWeightByAccountId (r:1 w:0)
	// Storage: EqAssets Assets (r:1 w:0)
	// Storage: Oracle PricePoints (r:17 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: EqRate NowMillisOffset (r:1 w:0)
	// Storage: EqMarginCall MaintenanceTimers (r:1 w:0)
	// Storage: FinancialModule Metrics (r:1 w:0)
	// Storage: EqAggregates TotalUserGroups (r:37 w:3)
	// Storage: Authorship Author (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: Subaccounts OwnerAccount (r:1 w:0)
	// Storage: EqBalances Account (r:1 w:0)
	fn reinit_external() -> Weight {
		Weight::from_parts(1_959_201_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(73 as u64))
			.saturating_add(T::DbWeight::get().writes(7 as u64))
	}
	// Storage: EqRate Keys (r:1 w:0)
	// Storage: Subaccounts OwnerAccount (r:2 w:0)
	// Storage: Subaccounts Subaccount (r:3 w:0)
	// Storage: System Account (r:2 w:2)
	// Storage: Oracle PricePoints (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: EqRate NowMillisOffset (r:1 w:0)
	// Storage: EqAssets Assets (r:1 w:0)
	// Storage: EqBalances Reserved (r:1 w:0)
	// Storage: EqAggregates AccountUserGroups (r:6 w:2)
	// Storage: EqAggregates TotalUserGroups (r:2 w:2)
	// Storage: EqBalances Account (r:1 w:0)
	// Storage: EqRate LastFeeUpdate (r:0 w:1)
	fn delete_account() -> Weight {
		Weight::from_parts(286_703_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(22 as u64))
			.saturating_add(T::DbWeight::get().writes(7 as u64))
	}
	// Storage: Subaccounts OwnerAccount (r:2 w:0)
	// Storage: Subaccounts Subaccount (r:3 w:0)
	// Storage: System Account (r:2 w:2)
	// Storage: Oracle PricePoints (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: EqRate NowMillisOffset (r:1 w:0)
	// Storage: EqAssets Assets (r:1 w:0)
	// Storage: EqBalances Reserved (r:1 w:0)
	// Storage: EqAggregates AccountUserGroups (r:6 w:2)
	// Storage: EqAggregates TotalUserGroups (r:2 w:2)
	// Storage: EqBalances Account (r:1 w:0)
	// Storage: EqRate LastFeeUpdate (r:0 w:1)
	fn delete_account_external() -> Weight {
		Weight::from_parts(208_667_000 as u64, 0)
			.saturating_add(T::DbWeight::get().reads(21 as u64))
			.saturating_add(T::DbWeight::get().writes(7 as u64))
	}
	// Storage: EqRate AutoReinitEnabled (r:0 w:1)
	fn set_auto_reinit_enabled() -> Weight {
		Weight::from_parts(6_069_000 as u64, 0)
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}

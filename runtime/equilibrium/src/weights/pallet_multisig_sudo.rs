
//! Autogenerated weights for `eq_multisig_sudo`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-10-17, STEPS: `10`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ivan-GP76`, CPU: `11th Gen Intel(R) Core(TM) i7-11800H @ 2.30GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/eq-node
// benchmark
// pallet
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// eq_multisig_sudo
// --extrinsic=*
// --steps
// 10
// --repeat
// 5
// --output
// ./runtime/equilibrium/src/weights/pallet_multisig_sudo.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight}};
use sp_std::marker::PhantomData;

/// Weight functions for `eq_multisig_sudo`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> eq_multisig_sudo::WeightInfo for WeightInfo<T> {
	// Storage: EqMultisigSudo Keys (r:1 w:1)
	fn add_key() -> Weight {
		Weight::from_ref_time(23_067_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: EqMultisigSudo Keys (r:4 w:1)
	// Storage: EqMultisigSudo Threshold (r:1 w:0)
	fn remove_key() -> Weight {
		Weight::from_ref_time(43_589_000 as u64)
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: EqMultisigSudo Keys (r:3 w:0)
	// Storage: EqMultisigSudo Threshold (r:0 w:1)
	fn modify_threshold() -> Weight {
		Weight::from_ref_time(33_278_000 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: EqMultisigSudo Keys (r:1 w:0)
	// Storage: EqMultisigSudo Threshold (r:1 w:0)
	// Storage: EqMultisigSudo MultisigProposals (r:0 w:1)
	fn propose() -> Weight {
		Weight::from_ref_time(27_871_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: EqMultisigSudo Keys (r:1 w:0)
	// Storage: EqMultisigSudo MultisigProposals (r:1 w:1)
	// Storage: EqMultisigSudo Threshold (r:1 w:0)
	fn approve() -> Weight {
		Weight::from_ref_time(32_362_000 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: EqMultisigSudo MultisigProposals (r:1 w:1)
	// Storage: EqMultisigSudo Keys (r:1 w:0)
	// Storage: EqMultisigSudo Threshold (r:1 w:0)
	fn cancel_proposal() -> Weight {
		Weight::from_ref_time(20_742_000 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}

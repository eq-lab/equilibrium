
//! Autogenerated weights for `eq_margin_call`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-01-09, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `muctep-osx-m1.local`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/eq-node
// benchmark
// pallet
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// eq_margin_call
// --extrinsic=*
// --steps
// 50
// --repeat
// 20
// --output
// ./runtime/equilibrium/src/weights/pallet_margin_call.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight}};
use sp_std::marker::PhantomData;

/// Weight functions for `eq_margin_call`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> eq_margin_call::WeightInfo for WeightInfo<T> {
	// Storage: System Account (r:2 w:2)
	// Storage: EqDex AssetWeightByAccountId (r:1 w:0)
	// Storage: EqAssets Assets (r:1 w:0)
	// Storage: Oracle PricePoints (r:1 w:0)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: EqBalances TempMigration (r:2 w:0)
	// Storage: EqAggregates AccountUserGroups (r:6 w:1)
	// Storage: EqAggregates TotalUserGroups (r:4 w:4)
	// Storage: Subaccounts OwnerAccount (r:1 w:0)
	// Storage: EqMarginCall MaintenanceTimers (r:0 w:1)
	fn try_margincall_external() -> Weight {
		Weight::from_ref_time(182_000_000 as u64)
			.saturating_add(T::DbWeight::get().reads(19 as u64))
			.saturating_add(T::DbWeight::get().writes(8 as u64))
	}
}
